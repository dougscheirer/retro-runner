<!DOCTYPE html>
<html>
<head>
  <title><%= full_title(yield(:title)) %></title>
  <%= stylesheet_link_tag "application", media: "all" %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>
  <%= render 'layouts/shim' %>
  <script src="https://js.pusher.com/2.2/pusher.min.js"></script>
  <script>
      // Enable pusher logging - don't include this in production
      Pusher.log = function(message) {
          if (window.console && window.console.log) {
              window.console.log(message);
          }
      };

      var pusher = new Pusher('bec060895b93f6745a24', {
          encrypted: true
      });
      var channel = pusher.subscribe('retro_channel');
      channel.bind('my_event', function(data) {
          alert(data.message);
      });
      channel.bind('new-retro-event', function(data) {
          var newRetro = renderRetro(data);
          var retrolist = $("#retro-list");
          retrolist.prepend(newRetro);
      });
      channel.bind('transition-retro-status-event', function() {
          window.location.reload();
      });
      channel.bind('delete-retro-event', function(data) {
          var element = $("#retro-"+data);
          element.remove();
      });
      channel.bind('create-issue-event', function(data) {
          var template = renderIssue(data);
          var issuelist = $("#" + data.issue.issue_type + "_issues");
          issuelist.append($(template));
          issuelist.append($("#" + data.issue.issue_type + "_adder"));
      });
      channel.bind('update-issue-event', function(data) {
          var template = renderIssue(data);
          $("#issue-" + data.index + "-" + data.issue_type).replaceWith(template);
      });
      channel.bind('delete-issue-event', function(data) {
          var element = $("#issue-"+data.index+"-"+data.type);
          element.remove();
      });
      channel.bind('next-review-event', function(data) {
          var display = document.querySelector('#time');
          var index = data.index+2;
          var previous = $("#discussed").contents();
          previous.unwrap();
          var current = $("#"+data["type"]+"_issues li:nth-child("+index+")").find("#description");
          current.wrap("<b id='discussed'></b>");
          var last_id = display.getAttribute("name");
          clearInterval(last_id);
          display.textContent = "00:30 seconds remaining, ";
          startTimer(30, display);
      });
      channel.bind('new-vote-event', function(data) {
          var count = $('#votecount-'+data);
          var votecount = parseInt(count.text());
          votecount++;
          votecount = votecount.toString();
          count.text(votecount);
      });
      channel.bind('clear-votes-event', function(data) {
          var intvotes;
          for (var i=0; i<data.length; i++) {
              var votecount = $('#votecount-'+data[i]);
              intvotes = parseInt(votecount.text())-1;
              votecount.text(intvotes);
          }
      });
      channel.bind('next-voted-review-event', function(data) {
          var index = data.index+2;
          var previous = $("#discussed").contents();
          previous.unwrap();
          var current =$("#"+data.type+"_issues li:nth-child("+index+")").find("#description");
          current.wrap("<b id='discussed'></b>");
      });
      channel.bind('create-task-event', function(data) {
          var singleTask = renderTask(data);
          $("#tasks").append(singleTask);
          var belowList = $(".realign-below-list");
          var height = belowList.css("height");
          belowList.css("bottom", "-"+height);
      });
      channel.bind('update-task-event', function(data) {
          var singleTask = renderTask(data);
          $("#task-"+data.task.id).replaceWith(singleTask);
      });
      channel.bind('delete-task-event', function(data) {
          var element = $("#task-"+data);
          element.remove();
      });
      channel.bind('complete-task-event', function(data) {
          var element = $("#task-"+data.id);
          var completeLink = $("#completelink-"+data.id);
          if (data.complete == true) {
              element.addClass("strikeout");
              completeLink.html("set as incomplete");
          }
          else {
              element.removeClass("strikeout");
              completeLink.html("set as complete");
          }
      });
  </script>
</head>
<body>
<%= render 'layouts/header' %>
<div class="container relative-class">
  <%= flash_messages %>
  <%= yield %>
</div>
<!--<div class="container debug">
  <%= debug(params) if Rails.env.development? %>
</div>-->
</body>
</html>